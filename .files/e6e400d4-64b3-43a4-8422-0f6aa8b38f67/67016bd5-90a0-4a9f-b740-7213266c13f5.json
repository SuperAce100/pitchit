{"file_path": "public/script.js", "response": "const rewardButton = document.getElementById('rewardButton');\nconst rewardText = document.getElementById('rewardText');\nconst title = document.getElementById('title');\n\n// Create audio context and sounds\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\nfunction createRewardSound(rewardClass) {\n    const oscillators = [];\n    const gainNodes = [];\n    \n    // Different base frequencies for different reward tiers\n    const baseFreq = {\n        'common': 440,\n        'uncommon': 523.25,\n        'rare': 659.25,\n        'epic': 783.99,\n        'legendary': 880,\n        'mythic': 1046.50\n    }[rewardClass] || 440;\n    \n    const frequencies = [baseFreq, baseFreq * 1.5, baseFreq * 2];\n    frequencies.forEach((freq, index) => {\n        const oscillator = audioContext.createOscillator();\n        const gainNode = audioContext.createGain();\n        \n        oscillator.connect(gainNode);\n        gainNode.connect(audioContext.destination);\n        \n        oscillator.type = index === 0 ? 'sine' : 'triangle';\n        oscillator.frequency.setValueAtTime(freq, audioContext.currentTime);\n        oscillator.frequency.exponentialRampToValueAtTime(freq * 2, audioContext.currentTime + 0.1);\n        \n        gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);\n        gainNode.gain.exponentialRampToValueAtTime(0.2, audioContext.currentTime + 0.05);\n        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.3);\n        \n        oscillator.start();\n        oscillator.stop(audioContext.currentTime + 0.3);\n        \n        oscillators.push(oscillator);\n        gainNodes.push(gainNode);\n    });\n}\n\n// Experiment data\nconst rewards = [\n    { text: \"STIMULUS DETECTED [+10]\", points: 10, weight: 20, class: 'common' },\n    { text: \"POSITIVE REINFORCEMENT [+25]\", points: 25, weight: 12, class: 'uncommon' },\n    { text: \"NEURAL ACTIVATION [+50]\", points: 50, weight: 8, class: 'rare' },\n    { text: \"DOPAMINE SURGE [+100]\", points: 100, weight: 4, class: 'epic' },\n    { text: \"SYNAPTIC BREAKTHROUGH [+250]\", points: 250, weight: 2, class: 'legendary' },\n    { text: \"CONSCIOUSNESS EXPANSION [+1000]\", points: 1000, weight: 1, class: 'mythic' }\n];\n\n// Experiment parameters\nlet consecutiveNonRewards = 0;\nlet totalPoints = 0;\nlet currentLevel = 1;\nconst BASE_PROBABILITY = 0.25;\nconst PROBABILITY_INCREMENT = 0.15;\nconst MAX_PROBABILITY = 0.9;\nconst POINTS_PER_LEVEL = 1000;\n\nfunction updateLevel() {\n    const newLevel = Math.floor(totalPoints / POINTS_PER_LEVEL) + 1;\n    const pointsToNextLevel = (newLevel * POINTS_PER_LEVEL) - totalPoints;\n    \n    if (newLevel !== currentLevel) {\n        currentLevel = newLevel;\n        title.innerHTML = `<h1>POV: You are a rat in a Skinner Box.</h1>\n            <div class=\"stats\">\n                SUBJECT LEVEL: ${currentLevel} | \n                TOTAL REINFORCEMENT: ${totalPoints} | \n                NEXT LEVEL: ${pointsToNextLevel} POINTS REMAINING\n            </div>`;\n    } else {\n        document.querySelector('.stats').textContent = \n            `SUBJECT LEVEL: ${currentLevel} | ` +\n            `TOTAL REINFORCEMENT: ${totalPoints} | ` +\n            `NEXT LEVEL: ${pointsToNextLevel} POINTS REMAINING`;\n    }\n}\n\n// Initialize stats display\nconst initialPointsToNextLevel = POINTS_PER_LEVEL - totalPoints;\ntitle.innerHTML += `<div class=\"stats\">\n    SUBJECT LEVEL: ${currentLevel} | \n    TOTAL REINFORCEMENT: ${totalPoints} | \n    NEXT LEVEL: ${initialPointsToNextLevel} POINTS REMAINING\n</div>`;\n\nfunction getRandomReward() {\n    const totalWeight = rewards.reduce((sum, reward) => sum + reward.weight, 0);\n    let random = Math.random() * totalWeight;\n    \n    for (const reward of rewards) {\n        random -= reward.weight;\n        if (random <= 0) return reward;\n    }\n    return rewards[0];\n}\n\nfunction flashButton() {\n    rewardButton.classList.add('flash');\n    setTimeout(() => rewardButton.classList.remove('flash'), 200);\n}\n\nfunction pulseButton() {\n    rewardButton.classList.add('pulse');\n    setTimeout(() => rewardButton.classList.remove('pulse'), 500);\n}\n\nrewardButton.addEventListener('click', () => {\n    rewardText.textContent = '';\n    rewardText.classList.remove('show');\n    rewardText.className = 'reward-text';\n    \n    flashButton();\n    \n    const currentProbability = Math.min(\n        BASE_PROBABILITY + (consecutiveNonRewards * PROBABILITY_INCREMENT),\n        MAX_PROBABILITY\n    );\n    \n    if (Math.random() < currentProbability) {\n        consecutiveNonRewards = 0;\n        const reward = getRandomReward();\n        totalPoints += reward.points;\n        updateLevel();\n        \n        createRewardSound(reward.class);\n        \n        setTimeout(() => {\n            rewardText.textContent = reward.text;\n            rewardText.classList.add('show', reward.class);\n            pulseButton();\n        }, 100);\n    } else {\n        consecutiveNonRewards++;\n    }\n}); "}